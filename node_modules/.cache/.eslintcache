[{"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\index.js":"1","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\App.js":"2","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\Tela404.js":"3","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaMenu.js":"4","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaDeCadastroTipoQuartos.js":"5","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaDeCadastroDeQuartos.js":"6","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaErro.js":"7","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaCarregamento.js":"8","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\tabelas\\tabelaTipoQuartos.js":"9","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\tabelas\\tabelaDeQuartos.js":"10","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Pagina.js":"11","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\Utilitarios\\util.js":"12","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadTipoQuartos.jsx":"13","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadQuartos.jsx":"14","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Cabecalho.js":"15","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Rodape.js":"16","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Menu.js":"17","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\componentes\\busca\\BarraBusca.jsx":"18","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadQuartos.js":"19","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadTipoQuartos.js":"20","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaDeCadastroDeCliente.js":"21","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadCliente.js":"22","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\tabelas\\tabelaDeClientes.js":"23"},{"size":274,"mtime":1687049388840,"results":"24","hashOfConfig":"25"},{"size":950,"mtime":1693178870141,"results":"26","hashOfConfig":"25"},{"size":344,"mtime":1667261540000,"results":"27","hashOfConfig":"25"},{"size":129,"mtime":1669760588000,"results":"28","hashOfConfig":"25"},{"size":1935,"mtime":1685147956354,"results":"29","hashOfConfig":"25"},{"size":1881,"mtime":1685134691213,"results":"30","hashOfConfig":"25"},{"size":341,"mtime":1669162382000,"results":"31","hashOfConfig":"25"},{"size":575,"mtime":1685132456856,"results":"32","hashOfConfig":"25"},{"size":3000,"mtime":1685148448159,"results":"33","hashOfConfig":"25"},{"size":3042,"mtime":1685135949631,"results":"34","hashOfConfig":"25"},{"size":430,"mtime":1685133184861,"results":"35","hashOfConfig":"25"},{"size":128,"mtime":1669157074000,"results":"36","hashOfConfig":"25"},{"size":3967,"mtime":1685886522375,"results":"37","hashOfConfig":"25"},{"size":5775,"mtime":1692835299697,"results":"38","hashOfConfig":"25"},{"size":303,"mtime":1668956952000,"results":"39","hashOfConfig":"25"},{"size":320,"mtime":1668553878000,"results":"40","hashOfConfig":"25"},{"size":1061,"mtime":1685133148981,"results":"41","hashOfConfig":"25"},{"size":4092,"mtime":1685141511934,"results":"42","hashOfConfig":"25"},{"size":5778,"mtime":1693179007002,"results":"43","hashOfConfig":"25"},{"size":4016,"mtime":1689165945619,"results":"44","hashOfConfig":"25"},{"size":2987,"mtime":1687224431139,"results":"45","hashOfConfig":"25"},{"size":9576,"mtime":1690396548330,"results":"46","hashOfConfig":"25"},{"size":4185,"mtime":1687257992585,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lswkxj",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\index.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\App.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\Tela404.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaMenu.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaDeCadastroTipoQuartos.js",["123","124"],[],"import Pagina from \"../templates/Pagina\";\r\nimport FormCadTipoQuartos from \"../formularios/FormCadTipoQuartos\";\r\nimport TabelaTipoQuartos from \"../tabelas/tabelaTipoQuartos\";\r\nimport { useState, useEffect } from \"react\";\r\nimport TelaCarregamento from \"./TelaCarregamento\";\r\nimport TelaErro from \"./TelaErro\";\r\nimport STATUS from \"../Utilitarios/util\";\r\n\r\nexport default function TelaCadastroTipoQuartos(props){\r\n\r\n    function buscarTipoQuartos(){\r\n        fetch('http://localhost:5000/tipoquarto',{method:\"GET\"})\r\n        .then((resposta) => {\r\n            return resposta.json();\r\n        }).then((dados) => {\r\n            setListaTipoQuartos(dados);\r\n            setStatus(STATUS.carregado);      \r\n        }).catch((erro) => {\r\n            setStatus(STATUS.erro);\r\n        });\r\n            \r\n    }\r\n    \r\n    const [exibirTabela, setExibirTabela] = useState(true);\r\n    const [status, setStatus] = useState(STATUS.ocioso);\r\n    const [listaTipoQuartos, setListaTipoQuartos] = useState([]);\r\n    const [tipoquartoSelecionado, setTipoQuartoSelecionado] = useState({});\r\n  \r\n   \r\n    useEffect(() => {\r\n        setStatus(STATUS.ocioso);\r\n        buscarTipoQuartos();\r\n    },[])\r\n\r\n  \r\n    if(exibirTabela){\r\n\r\n        if (status === STATUS.ocioso){\r\n           return(\r\n            <TelaCarregamento/>\r\n                 );\r\n    }\r\n    else if (status === STATUS.carregado) {\r\n        return(\r\n            <Pagina>\r\n                <TabelaTipoQuartos dados={listaTipoQuartos} onTabela={setExibirTabela}/>\r\n            </Pagina>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <TelaErro mensagem=\"Não foi possível recuperar os dados dos quartos. \r\n            Por favor, entre em contato com a administração do sistema!\"/>\r\n        );\r\n    }\r\n}\r\nelse {\r\n    return(\r\n        <Pagina>\r\n            <FormCadTipoQuartos onTabela={setExibirTabela} listaTiposQuartos={listaTipoQuartos}/>\r\n        </Pagina>\r\n    );\r\n}\r\n    \r\n}","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaDeCadastroDeQuartos.js",["125","126"],[],"import Pagina from \"../templates/Pagina\";\r\nimport FormCadQuartos from \"../formularios/FormCadQuartos\";\r\nimport TabelaDeQuartos from \"../tabelas/tabelaDeQuartos\";\r\nimport { useState, useEffect } from \"react\";\r\nimport TelaCarregamento from \"./TelaCarregamento\";\r\nimport TelaErro from \"./TelaErro\";\r\nimport STATUS from \"../Utilitarios/util\";\r\n\r\nexport default function TelaCadastroDeQuartos(props){\r\n\r\n    function buscarQuartos(){\r\n        fetch('http://localhost:5000/quarto',{method:\"GET\"})\r\n        .then((resposta) => {\r\n            return resposta.json();\r\n        }).then((dados) => {\r\n            setListaQuartos(dados);\r\n            setStatus(STATUS.carregado);      \r\n        }).catch((erro) => {\r\n            setStatus(STATUS.erro);\r\n        });\r\n            \r\n    }\r\n    \r\n    const [exibirTabela, setExibirTabela] = useState(true);\r\n    const [status, setStatus] = useState(STATUS.ocioso);\r\n    const [listaQuartos, setListaQuartos] = useState([]);\r\n    const [tipoquartoSelecionado, setTipoQuartoSelecionado] = useState({});\r\n  \r\n   \r\n    useEffect(() => {\r\n        setStatus(STATUS.ocioso);\r\n        buscarQuartos();\r\n    },[])\r\n\r\n  \r\n    if(exibirTabela){\r\n\r\n        if (status === STATUS.ocioso){\r\n           return(\r\n            <TelaCarregamento/>\r\n                 );\r\n    }\r\n    else if (status === STATUS.carregado) {\r\n        return(\r\n            <Pagina>\r\n                <TabelaDeQuartos dados={listaQuartos} onTabela={setExibirTabela}/>\r\n            </Pagina>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <TelaErro mensagem=\"Não foi possível recuperar os dados dos quartos. \r\n            Por favor, entre em contato com a administração do sistema!\"/>\r\n        );\r\n    }\r\n}\r\nelse {\r\n    return(\r\n        <Pagina>\r\n            <FormCadQuartos onTabela={setExibirTabela} listaCamareiros={listaQuartos}/>\r\n        </Pagina>\r\n    );\r\n}\r\n    \r\n}","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaErro.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaCarregamento.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\tabelas\\tabelaTipoQuartos.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\tabelas\\tabelaDeQuartos.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Pagina.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\Utilitarios\\util.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadTipoQuartos.jsx",["127","128"],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadQuartos.jsx",["129","130","131","132"],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Cabecalho.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Rodape.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\templates\\Menu.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\componentes\\busca\\BarraBusca.jsx",["133"],[],"import { useState, useRef } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport \"./barraBusca.css\";\r\n\r\nexport default function BarraBusca({\r\n  placeHolder,\r\n  dados,\r\n  campoChave,\r\n  campoBusca,\r\n  funcaoSelecao,\r\n  valor,\r\n}) {\r\n  //manipula o input (ciclo de vida)\r\n  const inputBusca = useRef();\r\n  //definição dos estados do componente\r\n  const [termoBusca, setTermoBusca] = useState(valor ? valor : \"\");\r\n  const [dadosLista, setDadosLista] = useState(dados);\r\n  const [itemSelecionado, setItemSelecionado] = useState(false);\r\n\r\n  function filtrarResultado(termo) {\r\n    //exige que o termo da busca seja conhecido e que seja utilizado como\r\n    //critério de seleção\r\n    setDadosLista(\r\n      dados.filter((item) => \r\n      {\r\n       return termo.length > 1 ? item[campoBusca].toLowerCase().includes(termo.toLowerCase()): false;\r\n      }));\r\n\r\n    let componenteResultado = document.querySelector(\"[data-resultado]\");\r\n\r\n    if (dados.length > 0) {\r\n      componenteResultado.style.display = \"block\";\r\n    } else {\r\n      componenteResultado.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"barra\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-search\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n        </svg>\r\n\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={placeHolder}\r\n          value={termoBusca}\r\n          required\r\n          ref={inputBusca}\r\n          onChange={(f) => {\r\n            setTermoBusca(f.target.value.toLowerCase());\r\n            filtrarResultado(f.target.value.toLowerCase());\r\n            //testar se o elemento do input é válido ou não\r\n            if (!itemSelecionado) {\r\n              f.target.setAttribute(\"aria-invalid\", true);\r\n              f.target.setCustomValidity(\"ocorreu um erro..\");\r\n            } else {\r\n              f.target.removeAttribute(\"aria-invalid\");\r\n              f.target.setCustomValidity(\"\");\r\n            }\r\n          }}\r\n        />\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-x\"\r\n          viewBox=\"0 0 16 16\"\r\n          onClick=\r\n          {() => {\r\n            setTermoBusca(\"\");\r\n            filtrarResultado();\r\n            setItemSelecionado(\"false\");\r\n            funcaoSelecao({});\r\n\r\n            inputBusca.current.setAttribute(\"aria-invalid\", true);\r\n            inputBusca.current.setCustomValidity(\"erro ao apagar..\");\r\n          }}\r\n        >\r\n          <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n          \r\n        </svg>\r\n\r\n        <div className=\"resultado\">\r\n          <ul data-resultado>\r\n            {dadosLista.map((item) => {\r\n              return (\r\n                <li\r\n                  key={item[campoChave]}\r\n                  //selecionar um item da lista\r\n                  onClick={() => {\r\n                    setTermoBusca(item[campoBusca]);\r\n                    funcaoSelecao(item);\r\n                    //informar que o componente está limpo, ou válido\r\n                    inputBusca.current.setCustomValidity(\"\");\r\n                    //esconder a lista criada\r\n                    let componenteResultado =\r\n                      document.querySelector(\"[data-resultado]\");\r\n                    componenteResultado.style.display = \"none\";\r\n                  }}\r\n                >\r\n                  {item[campoChave] + \"-\" + item[campoBusca]}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadQuartos.js",["134","135","136","137"],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadTipoQuartos.js",["138","139"],[],"import { useState, useEffect } from \"react\";\r\nimport {Form, Row, Col, InputGroup, Button, Container} from \"react-bootstrap\";\r\n\r\n\r\nexport default function FormCadTipoQuartos(props) {\r\n  const [validacao, setValidacao] = useState(false);\r\n  const [listaTipoQuartos, setListaTipoQuartos] = useState([]);\r\n  const [tipoQuartoSelecionado, setTipoQuartoSelecionado] = useState({});\r\n\r\n  const [tipo_quarto, setQuarto] = useState({\r\n    codigo : 0,\r\n    descricao : \"\",\r\n    preco : 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/tipoquarto', {method: \"GET\"})\r\n    .then((resposta) => {\r\n        return resposta.json();\r\n    })\r\n    .then((listaTipoQuartos)=>{\r\n      setListaTipoQuartos(listaTipoQuartos);\r\n    })\r\n    .catch((erro) => {\r\n        console.log(\"Não foi possível recuperar dados do tipo do quarto no backend\");\r\n    });\r\n  },[]);\r\n\r\n  function manipularMudanca(e) {\r\n    const alvo = e.target.name;\r\n    if(e.target.type === \"checkbox\"){\r\n      setQuarto({...listaTipoQuartos, [alvo]: e.target.checked});\r\n    }\r\n    else{\r\n      setQuarto({...listaTipoQuartos, [alvo]: e.target.value});\r\n      console.log(\"O usuário digitou: \" + e.target.value);\r\n    }\r\n  }\r\n\r\n  function gravarTipoQuarto(){\r\n    fetch('http://localhost:5000/tipoquarto', {\r\n      method: \"POST\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({         \r\n        \"codigo\": tipo_quarto.codigo,\r\n        \"descricao\": tipo_quarto.descricao,\r\n        \"preco\": tipo_quarto.preco, \r\n      })\r\n\r\n    })\r\n    .then((resposta) => {\r\n        return resposta.json();\r\n    })\r\n    .then((listaTipoQuartos)=>{\r\n      setListaTipoQuartos(listaTipoQuartos);\r\n    })\r\n    .catch((erro) => {\r\n        erro.message(\"Não foi possível gravar o Tipo de Quarto\");\r\n    });\r\n  }\r\n\r\n  const manipulaSubmissao = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n       setValidacao(false);\r\n       gravarTipoQuarto();\r\n    }\r\n    else{\r\n       setValidacao(true);\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3 mb-3 border d-flex text-center\">\r\n        <h2>Cadastro de Tipos de Quartos</h2>\r\n      </Row>\r\n      <Row>\r\n        <Form noValidate validated={validacao} onSubmit={manipulaSubmissao}>\r\n          <Form.Group as={Col} md=\"1\">\r\n              <Form.Label>descricao</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  id=\"descricao\"\r\n                  name=\"descricao\"   \r\n                  value = {tipo_quarto.descricao}  \r\n                  onChange={manipularMudanca}                               \r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                   Informe a descrição!\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n          </Form.Group> \r\n          <Form.Group as={Col} md=\"1\">\r\n              <Form.Label>Preço</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  id=\"preco\"\r\n                  name=\"preco\"   \r\n                  value = {tipo_quarto.preco}  \r\n                  onChange={manipularMudanca}                               \r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                   Informe o Preço!\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n          </Form.Group>          \r\n          \r\n          <Button type=\"submit\">Cadastrar</Button>\r\n          <Button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  props.onTabela(true);\r\n                }}\r\n              >\r\n                Voltar\r\n              </Button>\r\n        </Form>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\TelasDeCadastro\\TelaDeCadastroDeCliente.js",[],[],"C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\formularios\\FormCadCliente.js",["140","141","142","143","144"],[],"import { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Row, Col, InputGroup, Button, Container } from \"react-bootstrap\";\r\nimport TelaCarregamento from \"../TelasDeCadastro/TelaCarregamento.js\";\r\nimport TelaErro from \"../TelasDeCadastro/TelaErro.js\";\r\nimport STATUS from \"../Utilitarios/util.js\";\r\n\r\nexport default function FormCadCliente(props) {\r\n  const [formValidado, setFormValidado] = useState(false);\r\n  const [clienteSelecionado, setClienteSelecionado] = useState({});\r\n  const [status, setStatus] = useState(STATUS.carregado);\r\n  //const [validacao, setValidacao] = useState(false);\r\n\r\n  const cpf = useRef(\"\");\r\n  const nome = useRef(\"\");\r\n  const sobrenome = useRef(\"\");\r\n  const dataNasc = useRef(\"\");\r\n  const cidade = useRef(\"\");\r\n  const uf = useRef(\"\");\r\n  const cep = useRef(\"\");\r\n  const email = useRef(\"\");\r\n\r\n  function buscaCliente() {\r\n    fetch(\"http://localhost:5000/cliente\", { method: \"GET\" })\r\n      .then((resposta) => {\r\n        return resposta.json();\r\n      })\r\n      .then((dados) => {\r\n        setFormValidado(dados);\r\n        setStatus(STATUS.carregado);\r\n      })\r\n      .catch((erro) => {\r\n        setStatus(STATUS.erro);\r\n      });\r\n  }\r\n\r\n  function cadastrarCliente(cliente) {\r\n    if (!props.EditaCliente) {\r\n      fetch(\"http://localhost:5000/cliente\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(cliente),\r\n      })\r\n        .then((resposta) => {\r\n          return resposta.json();\r\n        })\r\n        .then((dados) => {\r\n          alert(dados.mensagem);\r\n          props.buscaCliente.push(cliente);\r\n          props.onTabela(true);\r\n        })\r\n        .catch((erro) => {\r\n          setStatus(STATUS.erro);\r\n        });\r\n    } else {\r\n      fetch(\"http://localhost:5000/cliente\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(cliente),\r\n      })\r\n        .then((resposta) => {\r\n          return resposta.json();\r\n        })\r\n        .then((dados) => {\r\n          alert(dados.mensagem);\r\n          props.buscaCliente();\r\n          props.onTabela(true);\r\n        })\r\n        .catch((erro) => {\r\n          setStatus(STATUS.erro);\r\n        });\r\n    }\r\n  }\r\n\r\n  function preparaTela(cliente) {\r\n    if (props.EditarCliente) {\r\n      cpf.current.value = cliente.cpf;\r\n      nome.current.value = cliente.nome;\r\n      sobrenome.current.value = cliente.sobrenome;\r\n      dataNasc.current.value = cliente.dataNasc;\r\n      cidade.current.value = cliente.cidade;\r\n      uf.current.value = cliente.uf;\r\n      cep.current.value = cliente.cep;\r\n      email.current.value = cliente.email;\r\n    }\r\n  }\r\n\r\n  function validaDados() {\r\n    const cliente = {\r\n      cpf: cpf.current.value,\r\n      nome: nome.current.value,\r\n      sobrenome: sobrenome.current.value,\r\n      dataNasc: dataNasc.current.value,\r\n      cidade: cidade.current.value,\r\n      uf: uf.current.value,\r\n      cep: cep.current.value,\r\n      email: email.current.value,\r\n    }\r\n    if (\r\n      cliente.cpf &&\r\n      cliente.nome &&\r\n      cliente.sobrenome &&\r\n      cliente.dataNasc &&\r\n      cliente.cidade &&\r\n      cliente.uf &&\r\n      cliente.cep &&\r\n      cliente.email\r\n    )\r\n      return cliente;\r\n    else \r\n      return console.log(\"Preencha os campos corretamente\");\r\n  }\r\n\r\n  function manipulaSubmissao(evento) {\r\n    const formulario = evento.currentTarget;\r\n    if (formulario.checkValidity()) {\r\n      const cliente = validaDados();\r\n      if (cliente) {\r\n        setStatus(STATUS.ocioso);\r\n        cadastrarCliente(cliente);\r\n        setStatus(STATUS.carregado);\r\n      }\r\n    }\r\n    evento.preventDefault();\r\n    evento.stopPropagation();\r\n    setFormValidado(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    preparaTela(props.cliente);\r\n    buscaCliente();\r\n  }, []);\r\n\r\n  if (status == STATUS.carregado) {\r\n    return (\r\n      <Container>\r\n        <Row className=\"mt-3 mb-3 border d-flex text-center\">\r\n          <h2>Cadastro de Clientes</h2>\r\n        </Row>\r\n        <Row className=\"mt-3 p-2 border\">\r\n          <Row>\r\n            <Form\r\n              noValidate\r\n              validated={formValidado}\r\n              onSubmit={manipulaSubmissao}\r\n            >\r\n              <Row className=\"mb-3\">\r\n                <Row>\r\n                  <Form.Group as={Col} md=\"2\">\r\n                    <Form.Label>CPF</Form.Label>\r\n                    <Form.Control\r\n                      id=\"cpf\"\r\n                      name=\"cpf\"\r\n                      disabled={props.EditaCliente ? \"disabled\" : \"\"}\r\n                      required\r\n                      type=\"text\"\r\n                      placeHolder=\"111.111.111-11\"\r\n                      ref={cpf}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Por favor, Digite o CPF do cliente\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md=\"2\">\r\n                    <Form.Label>Nome</Form.Label>\r\n                    <Form.Control\r\n                      id=\"nome\"\r\n                      name=\"nome\"\r\n                      required\r\n                      type=\"text\"\r\n                      placeHolder=\"Ex: José\"\r\n                      ref={nome}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Por favor, informe o nome do cliente\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md=\"3\">\r\n                    <Form.Label>Sobrenome</Form.Label>\r\n                    <Form.Control\r\n                      id=\"sobrenome\"\r\n                      name=\"sobrenome\"\r\n                      required\r\n                      type=\"text\"\r\n                      placeHolder=\"Ex: Antonio da Silva\"\r\n                      ref={sobrenome}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Por favor, informe sobrenome!\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md=\"4\">\r\n                  <InputGroup>\r\n                    <Form.Group controlId=\"dataNasc\">\r\n                      <Form.Label>Data de Nascimento</Form.Label>\r\n                      <Form.Control type=\"date\" ref={dataNasc} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Por favor, informe a data de nascimento do cliente!\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                </Row>                \r\n                \r\n              </Row>\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"3\">\r\n                  <Form.Label>Cidade</Form.Label>\r\n                  <Form.Control\r\n                    id=\"cidade\"\r\n                    name=\"cidade\"\r\n                    type=\"text\"\r\n                    placeHolder=\"Presidente Prudente\"\r\n                    required\r\n                    ref={cidade}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Por favor, informe a cidade.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"2\">\r\n                  <Form.Label>Estado</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"uf\"\r\n                    name=\"uf\"\r\n                    placeHolder=\"SP\"\r\n                    required\r\n                    ref={uf}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Por favor, informe o estado!\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"2\">\r\n                  <Form.Label>CEP</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"cep\"\r\n                    name=\"cep\"\r\n                    placeHolder=\"CEP\"\r\n                    required\r\n                    ref={cep}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Informe CEP válido.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col} md=\"5\">\r\n                  <Form.Label>E-mail</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeHolder=\"E-mail\"\r\n                    required\r\n                    ref={email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Informe um endereço de e-mail.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Button type=\"submit\">Cadastrar</Button>\r\n              <Button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  props.onTabela(true);\r\n                }}\r\n              >\r\n                Voltar\r\n              </Button>\r\n            </Form>\r\n          </Row>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (status == STATUS.ocioso) {\r\n    return <TelaCarregamento />;\r\n  } else {\r\n    return (\r\n      <TelaErro mensagem=\"Não foi possível recuperar os dados dos clientes. Entre em contato com o administrador do sistema\" />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\TocaDosGatos\\Documents\\FIPP-2023\\FullstackIIDP\\frontend\\src\\tabelas\\tabelaDeClientes.js",["145","146","147"],[],"import {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Table,\r\n  Col,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useRef } from \"react\";\r\n\r\nexport default function TabelaDeClientes(props) {\r\n  const cpf = useRef(\"\");\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3 mb-3 border d-flex text-center\">\r\n        <h2>Formulário de Cadastro de Cliente</h2>\r\n      </Row>\r\n      <Row>\r\n        <Col as={Col} md=\"7\">\r\n          <Button\r\n            onClick={() => {\r\n              props.editaCliente({}, false);\r\n              props.onTabela(false);\r\n            }}\r\n          >\r\n            Novo Cliente\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-3 p-2 border\">\r\n        <Table striped bordered hover size=\"sm\" style={{ fontSize: '0.7em' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>CPF</th>\r\n              <th>Nome</th>\r\n              <th>Sobrenome</th>\r\n              <th>Data Nascimento</th>\r\n              <th>Cidade</th>\r\n              <th>UF</th>\r\n              <th>CEP</th>\r\n              <th>E-mail</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.dados.map((cliente) => {\r\n              return (\r\n                <tr key={cliente.cpf}>\r\n                  <td>{cliente.cpf}</td>\r\n                  <td>{cliente.nome}</td>\r\n                  <td>{cliente.sobrenome}</td>\r\n                  <td>{cliente.dataNasc}</td>\r\n                  <td>{cliente.cidade}</td>\r\n                  <td>{cliente.uf}</td>\r\n                  <td>{cliente.cep}</td>\r\n                  <td>{cliente.email}</td>\r\n                  <td style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      style={{ marginRight: \"3px\" }}\r\n                      size=\"sm\"\r\n                      variant=\"warning\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-pencil\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        onClick={() => {\r\n                          props.editaCliente(cliente, true);\r\n                        }}\r\n                      >\r\n                        <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\r\n                      </svg>\r\n                    </Button>\r\n                    {}\r\n                    <Button size=\"sm\" variant=\"danger\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-trash\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        onClick={() => {\r\n                          props.excluiCliente(cliente, true);\r\n                        }}\r\n                      >\r\n                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                        <path\r\n                          fill-rule=\"evenodd\"\r\n                          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                        />\r\n                      </svg>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n",{"ruleId":"148","severity":1,"message":"149","line":27,"column":12,"nodeType":"150","messageId":"151","endLine":27,"endColumn":33},{"ruleId":"148","severity":1,"message":"152","line":27,"column":35,"nodeType":"150","messageId":"151","endLine":27,"endColumn":59},{"ruleId":"148","severity":1,"message":"149","line":27,"column":12,"nodeType":"150","messageId":"151","endLine":27,"endColumn":33},{"ruleId":"148","severity":1,"message":"152","line":27,"column":35,"nodeType":"150","messageId":"151","endLine":27,"endColumn":59},{"ruleId":"148","severity":1,"message":"153","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":31},{"ruleId":"148","severity":1,"message":"152","line":8,"column":33,"nodeType":"150","messageId":"151","endLine":8,"endColumn":57},{"ruleId":"148","severity":1,"message":"154","line":3,"column":38,"nodeType":"150","messageId":"151","endLine":3,"endColumn":44},{"ruleId":"148","severity":1,"message":"152","line":38,"column":33,"nodeType":"150","messageId":"151","endLine":38,"endColumn":57},{"ruleId":"155","severity":1,"message":"156","line":87,"column":14,"nodeType":"157","messageId":"158","endLine":87,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":170,"column":19,"nodeType":"157","messageId":"158","endLine":170,"endColumn":21},{"ruleId":"148","severity":1,"message":"159","line":2,"column":16,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"148","severity":1,"message":"154","line":3,"column":38,"nodeType":"150","messageId":"151","endLine":3,"endColumn":44},{"ruleId":"148","severity":1,"message":"152","line":37,"column":33,"nodeType":"150","messageId":"151","endLine":37,"endColumn":57},{"ruleId":"155","severity":1,"message":"156","line":86,"column":14,"nodeType":"157","messageId":"158","endLine":86,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":169,"column":19,"nodeType":"157","messageId":"158","endLine":169,"endColumn":21},{"ruleId":"148","severity":1,"message":"153","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":31},{"ruleId":"148","severity":1,"message":"152","line":8,"column":33,"nodeType":"150","messageId":"151","endLine":8,"endColumn":57},{"ruleId":"148","severity":1,"message":"160","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":28},{"ruleId":"148","severity":1,"message":"161","line":9,"column":30,"nodeType":"150","messageId":"151","endLine":9,"endColumn":51},{"ruleId":"162","severity":1,"message":"163","line":131,"column":6,"nodeType":"164","endLine":131,"endColumn":8,"suggestions":"165"},{"ruleId":"155","severity":1,"message":"156","line":133,"column":14,"nodeType":"157","messageId":"158","endLine":133,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":283,"column":21,"nodeType":"157","messageId":"158","endLine":283,"endColumn":23},{"ruleId":"148","severity":1,"message":"166","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":13},{"ruleId":"148","severity":1,"message":"167","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":12},{"ruleId":"148","severity":1,"message":"168","line":13,"column":9,"nodeType":"150","messageId":"151","endLine":13,"endColumn":12},"no-unused-vars","'tipoquartoSelecionado' is assigned a value but never used.","Identifier","unusedVar","'setTipoQuartoSelecionado' is assigned a value but never used.","'tipoQuartoSelecionado' is assigned a value but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'clienteSelecionado' is assigned a value but never used.","'setClienteSelecionado' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'preparaTela' and 'props.cliente'. Either include them or remove the dependency array.","ArrayExpression",["169"],"'InputGroup' is defined but never used.","'Form' is defined but never used.","'cpf' is assigned a value but never used.",{"desc":"170","fix":"171"},"Update the dependencies array to be: [preparaTela, props.cliente]",{"range":"172","text":"173"},[3816,3818],"[preparaTela, props.cliente]"]