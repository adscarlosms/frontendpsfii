{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TocaDosGatos\\\\Documents\\\\FIPP-2023\\\\FullstackIIDP\\\\frontend\\\\src\\\\formularios\\\\FormCadCategoriaProdutos.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Form, Row, Col, InputGroup, Button, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormCadCategoriaProdutos(props) {\n  _s();\n  const [validacao, setValidacao] = useState(false);\n  const [listaCategoriaProdutos, setListaCategoriaProdutos] = useState([]);\n  const [tipoQuartoSelecionado, setTipoQuartoSelecionado] = useState({});\n  const [categoria_produtos, setCategoriaProdutos] = useState({\n    codigo: 0,\n    descricao: \"\"\n  });\n  useEffect(() => {\n    fetch('http://localhost:5000/categoriaproduto', {\n      method: \"GET\"\n    }).then(resposta => {\n      return resposta.json();\n    }).then(listaCategoriaProdutos => {\n      setListaCategoriaProdutos(listaCategoriaProdutos);\n    }).catch(erro => {\n      console.log(\"Não foi possível recuperar dados do tipo do quarto no backend\");\n    });\n  }, []);\n  function manipularMudanca(e) {\n    const alvo = e.target.name;\n    if (e.target.type === \"checkbox\") {\n      categoria_produtos({\n        ...listaCategoriaProdutos,\n        [alvo]: e.target.checked\n      });\n    } else {\n      categoria_produtos({\n        ...listaCategoriaProdutos,\n        [alvo]: e.target.value\n      });\n      console.log(\"O usuário digitou: \" + e.target.value);\n    }\n  }\n  function gravarCategoriaProdutos() {\n    fetch('http://localhost:5000/categoriaproduto', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"codigo\": categoria_produtos.codigo,\n        \"descricao\": categoria_produtos.descricao\n      })\n    }).then(resposta => {\n      return resposta.json();\n    }).then(listaTipoQuartos => {\n      setListaCategoriaProdutos(listaCategoriaProdutos);\n    }).catch(erro => {\n      erro.message(\"Não foi possível gravar o Tipo de Quarto\");\n    });\n  }\n  const manipulaSubmissao = event => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      setValidacao(false);\n      gravarCategoriaProdutos();\n    } else {\n      setValidacao(true);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3 mb-3 border d-flex text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastro de Categoria de Produtos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validacao,\n        onSubmit: manipulaSubmissao,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"descricao\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"text\",\n              placeholder: \"\",\n              id: \"descricao\",\n              name: \"descricao\",\n              value: categoria_produtos.descricao,\n              onChange: manipularMudanca\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Informe a descri\\xE7\\xE3o da categoria!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: () => {},\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(FormCadCategoriaProdutos, \"J2GC6aKRmFfwzReWLOVk3O5qwcA=\");\n_c = FormCadCategoriaProdutos;\nvar _c;\n$RefreshReg$(_c, \"FormCadCategoriaProdutos\");","map":{"version":3,"names":["useState","useEffect","Form","Row","Col","InputGroup","Button","Container","FormCadCategoriaProdutos","props","validacao","setValidacao","listaCategoriaProdutos","setListaCategoriaProdutos","tipoQuartoSelecionado","setTipoQuartoSelecionado","categoria_produtos","setCategoriaProdutos","codigo","descricao","fetch","method","then","resposta","json","catch","erro","console","log","manipularMudanca","e","alvo","target","name","type","checked","value","gravarCategoriaProdutos","headers","body","JSON","stringify","listaTipoQuartos","message","manipulaSubmissao","event","form","currentTarget","checkValidity","preventDefault","stopPropagation"],"sources":["C:/Users/TocaDosGatos/Documents/FIPP-2023/FullstackIIDP/frontend/src/formularios/FormCadCategoriaProdutos.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {Form, Row, Col, InputGroup, Button, Container} from \"react-bootstrap\";\r\n\r\n\r\nexport default function FormCadCategoriaProdutos(props) {\r\n  const [validacao, setValidacao] = useState(false);\r\n  const [listaCategoriaProdutos, setListaCategoriaProdutos] = useState([]);\r\n  const [tipoQuartoSelecionado, setTipoQuartoSelecionado] = useState({});\r\n\r\n  const [categoria_produtos, setCategoriaProdutos] = useState({\r\n    codigo : 0,\r\n    descricao : \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/categoriaproduto', {method: \"GET\"})\r\n    .then((resposta) => {\r\n        return resposta.json();\r\n    })\r\n    .then((listaCategoriaProdutos)=>{\r\n      setListaCategoriaProdutos(listaCategoriaProdutos);\r\n    })\r\n    .catch((erro) => {\r\n        console.log(\"Não foi possível recuperar dados do tipo do quarto no backend\");\r\n    });\r\n  },[]);\r\n\r\n  function manipularMudanca(e) {\r\n    const alvo = e.target.name;\r\n    if(e.target.type === \"checkbox\"){\r\n      categoria_produtos({...listaCategoriaProdutos, [alvo]: e.target.checked});\r\n    }\r\n    else{\r\n      categoria_produtos({...listaCategoriaProdutos, [alvo]: e.target.value});\r\n      console.log(\"O usuário digitou: \" + e.target.value);\r\n    }\r\n  }\r\n\r\n  function gravarCategoriaProdutos(){\r\n    fetch('http://localhost:5000/categoriaproduto', {\r\n      method: \"POST\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({         \r\n        \"codigo\": categoria_produtos.codigo,\r\n        \"descricao\": categoria_produtos.descricao, \r\n      })\r\n\r\n    })\r\n    .then((resposta) => {\r\n        return resposta.json();\r\n    })\r\n    .then((listaTipoQuartos)=>{\r\n      setListaCategoriaProdutos(listaCategoriaProdutos);\r\n    })\r\n    .catch((erro) => {\r\n        erro.message(\"Não foi possível gravar o Tipo de Quarto\");\r\n    });\r\n  }\r\n\r\n  const manipulaSubmissao = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n       setValidacao(false);\r\n       gravarCategoriaProdutos();\r\n    }\r\n    else{\r\n       setValidacao(true);\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3 mb-3 border d-flex text-center\">\r\n        <h2>Cadastro de Categoria de Produtos</h2>\r\n      </Row>\r\n      <Row>\r\n        <Form noValidate validated={validacao} onSubmit={manipulaSubmissao}>\r\n          <Form.Group as={Col} md=\"1\">\r\n              <Form.Label>descricao</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  id=\"descricao\"\r\n                  name=\"descricao\"   \r\n                  value = {categoria_produtos.descricao}  \r\n                  onChange={manipularMudanca}                               \r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                   Informe a descrição da categoria!\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n          </Form.Group>                   \r\n          \r\n          <Button type=\"submit\">Cadastrar</Button>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              \r\n            }}\r\n          >\r\n            Voltar\r\n          </Button>\r\n        </Form>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}